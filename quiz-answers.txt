Hello world. This is my first file.

- Day 1 -
1. What is version control?
    Version control keeps track of all the changes made to files.

2. How do you create a new branch?
    git branch <branch-name>

3. What's the difference between 'git add' and 'git commit'?
    "git add" lets git know which files you want to change
    "git commit" tells git to make the changes to the added files

4. How do you push changes to GitHub?
    "git push origin <branch-name>"

5. What is a pull request?
    A pull request is a request to take some changes and add them to a certain branch.

- Day 2 -
1. What are the main HTTP methods used in REST APIs?
    GET, POST, PUT, PATCH, DELETE

2. What is the purpose of Flask blueprints?
    A blueprint organizes views and logic into a reusable module. It allows for modularity, cleaner code, reusability, avoids circular imports, and scales easily.

3. How do you handle database migrations in Flask?
    Flask-Migrate, a wrapper of Alembic (migration tool for SQLAlchemy).

4. What is the difference between PUT and PATCH?
    PUT replaces a resource or overwrites it. PATCH updates a resource or modifies it.

5. Why is API documentation important?
    API documentation helps developers understand the API, not call it incorrectly, saves them time, and makes the API look professional as well.

- Day 3 -
1. What is the difference between props and state?
    Props are inputs, whereas state is data.

2. When should you use useEffect?
    useEffect is for when something need to happen after the render.

3. What are React hooks?
    Hooks are functions to use React features like state and lifecycle.

4. How do you handle API calls in React?
    useEffect makes API calls. Inside you can use fetch() or axios and when data comes back, it can be saved to state or useState. 

5. What is the purpose of TypeScript in React?
    Typescript adds type safety to catch bugs and clean up code.
